[
    {
        "id": "b07c4393.bd45c",
        "type": "tab",
        "label": "database writing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c3f96367.bdb04",
        "type": "json",
        "z": "b07c4393.bd45c",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "46783660.b92cd8"
            ]
        ]
    },
    {
        "id": "d9b6b34e.96af2",
        "type": "amqp in",
        "z": "b07c4393.bd45c",
        "name": "",
        "topic": "",
        "iotype": "4",
        "ioname": "photovoltaics_controller",
        "server": "d2699a7f.080848",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "c3f96367.bdb04"
            ]
        ]
    },
    {
        "id": "246be87b.703388",
        "type": "influxdb out",
        "z": "b07c4393.bd45c",
        "influxdb": "8e544b1e.274ba8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "test",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "photovoltaics",
        "x": 1370,
        "y": 360,
        "wires": []
    },
    {
        "id": "93316fce.37636",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare currentProduction",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        voltage: msg.payload.payload.voltage,\n        current: msg.payload.payload.current,\n        power: msg.payload.payload.power,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "46783660.b92cd8",
        "type": "switch",
        "z": "b07c4393.bd45c",
        "name": "",
        "property": "payload.manifest.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "currentProduction",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "currentConsumption",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "currentCharging",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "batteryCondition",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "batteryThresholds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deviceCondition",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pvThresholds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energyConsumed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "energyProduced",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "batteryStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "chargingStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pvStatus",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 12,
        "x": 510,
        "y": 360,
        "wires": [
            [
                "172ea03c.c1f42"
            ],
            [
                "dfbd746.427ae88"
            ],
            [
                "ef43b72e.e2f848"
            ],
            [
                "82ac3991.159948"
            ],
            [
                "6961a9c3.6090d8"
            ],
            [
                "a22adb5a.234aa8"
            ],
            [
                "e29b0e73.492cc"
            ],
            [
                "3f36354c.78617a"
            ],
            [
                "7d54329b.efc29c"
            ],
            [
                "4c1b6ab5.82e5d4"
            ],
            [
                "13b8a36d.5594fd"
            ],
            [
                "1f990749.6a3a79"
            ]
        ]
    },
    {
        "id": "814a493b.cba778",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare currentConsumption",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        voltage: msg.payload.payload.voltage,\n        current: msg.payload.payload.current,\n        power: msg.payload.payload.power,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 180,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "95b79212.e661",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare currentCharging",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        voltage: msg.payload.payload.voltage,\n        current: msg.payload.payload.current,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n        battery: msg.payload.payload.battery\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 220,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "cd0731a5.04499",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare batteryCondition",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        temp: msg.payload.payload.temp,\n        chargePercent: msg.payload.payload.chargePercent,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n        battery: msg.payload.payload.battery\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 260,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "82ac3991.159948",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "cd0731a5.04499"
            ]
        ]
    },
    {
        "id": "172ea03c.c1f42",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 140,
        "wires": [
            [
                "93316fce.37636"
            ]
        ]
    },
    {
        "id": "dfbd746.427ae88",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 180,
        "wires": [
            [
                "814a493b.cba778"
            ]
        ]
    },
    {
        "id": "ef43b72e.e2f848",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 220,
        "wires": [
            [
                "95b79212.e661"
            ]
        ]
    },
    {
        "id": "4ce31d8e.4c88d4",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare batteryThresholds",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        minVoltage: msg.payload.payload.minVoltage,\n        maxVoltage: msg.payload.payload.maxVoltage,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n        battery: msg.payload.payload.battery\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "6961a9c3.6090d8",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 300,
        "wires": [
            [
                "4ce31d8e.4c88d4"
            ]
        ]
    },
    {
        "id": "bd10b4ac.8a16b8",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare deviceCondition",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        temp: msg.payload.payload.temp,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 340,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "a22adb5a.234aa8",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 340,
        "wires": [
            [
                "bd10b4ac.8a16b8"
            ]
        ]
    },
    {
        "id": "1839ca67.236a66",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare pvThresholds",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        minVoltage: msg.payload.payload.minVoltage,\n        maxVoltage: msg.payload.payload.maxVoltage,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 380,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "e29b0e73.492cc",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 380,
        "wires": [
            [
                "1839ca67.236a66"
            ]
        ]
    },
    {
        "id": "891dffb9.20cfe",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare energyConsumed",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        daily: msg.payload.payload.daily,\n        monthly: msg.payload.payload.monthly,\n        yearly: msg.payload.payload.yearly,\n        total: msg.payload.payload.total,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 420,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "3f36354c.78617a",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 420,
        "wires": [
            [
                "891dffb9.20cfe"
            ]
        ]
    },
    {
        "id": "a4516807.6dc408",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare energyProduced",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        daily: msg.payload.payload.daily,\n        monthly: msg.payload.payload.monthly,\n        yearly: msg.payload.payload.yearly,\n        total: msg.payload.payload.total,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 460,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "7d54329b.efc29c",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 460,
        "wires": [
            [
                "a4516807.6dc408"
            ]
        ]
    },
    {
        "id": "459984b4.3019bc",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare batteryStatus",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        voltageStatus: msg.payload.payload.voltageStatus,\n        tempStatus: msg.payload.payload.tempStatus,\n        innerResistanceStatus: msg.payload.payload.innerResistanceStatus,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device,\n        battery: msg.payload.payload.battery\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 500,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "4c1b6ab5.82e5d4",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 500,
        "wires": [
            [
                "459984b4.3019bc"
            ]
        ]
    },
    {
        "id": "11698437.4abd0c",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare chargingStatus",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        status: msg.payload.payload.status,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 540,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "13b8a36d.5594fd",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 540,
        "wires": [
            [
                "11698437.4abd0c"
            ]
        ]
    },
    {
        "id": "4a93bf51.c36f8",
        "type": "function",
        "z": "b07c4393.bd45c",
        "name": "prepare pvStatus",
        "func": "var response = {};\n\nresponse.payload =\n[\n    {\n        status: msg.payload.payload.status,\n        time: new Date(msg.payload.measurementTime)\n    },\n    {\n        device: msg.payload.payload.device\n    }\n];\n\nresponse.measurement = msg.payload.manifest.type;\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 580,
        "wires": [
            [
                "246be87b.703388"
            ]
        ]
    },
    {
        "id": "1f990749.6a3a79",
        "type": "rbe",
        "z": "b07c4393.bd45c",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload.payload",
        "x": 770,
        "y": 580,
        "wires": [
            [
                "4a93bf51.c36f8"
            ]
        ]
    },
    {
        "id": "d2699a7f.080848",
        "type": "amqp-server",
        "host": "localhost",
        "port": "5672",
        "vhost": "",
        "keepalive": "30",
        "usetls": false,
        "verifyservercert": true,
        "useca": false,
        "ca": "",
        "usetopology": false,
        "topology": "{\n\t\"exchanges\": [\n\t\t{\"name\": \"exchange1\", \"type\": \"direct\", \"options\": {\"durable\": false}},\n\t\t{\"name\": \"exchange2\"}\n\t],\n\t\"queues\": [\n\t\t{\"name\": \"queue1\", \"options\": {\"messageTtl\": 60000}},\n\t\t{\"name\": \"queue2\"}\n\t],\n\t\"bindings\": [\n\t\t{\"source\": \"exchange1\", \"queue\": \"queue1\", \"pattern\": \"debug\", \"args\": {}},\n\t\t{\"source\": \"exchange1\", \"exchange\": \"exchange2\", \"pattern\": \"error\"},\n\t\t{\"source\": \"exchange2\", \"queue\": \"queue2\"}\n\t]\n}",
        "prefetch": false,
        "prefetchvalue": "1",
        "prefetchack": false,
        "prefetchvalueack": "10"
    },
    {
        "id": "8e544b1e.274ba8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    }
]